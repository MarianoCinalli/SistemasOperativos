#!/bin/bash

#su primer parametro es una lista de los permisos a fijar, por ejemplo r w x
#su segundo parametro es el nombre del archivo

#guardo nombre del comando

fijar_permisos () {
	for permiso in $1
	do
		if [ ! -$permiso "$2" ]
		then
			if ! chmod -f +$permiso "$2"
			then 
				case $permiso in
					r) permiso=lectura;;
					x) permiso=ejecución;;
				esac
				printf "initep: error, fallo al intentar fijar permiso de $permiso en archivo "$2", verificar si archivo existe o si el usuario ">&2
				printf "%s\n" "tiene permitido cambiar permisos">&2
				return -1
			fi
		fi
	done
	return 0
}

source ./logep

#como se va a ejecutar sin shell hijo, y necesito mostrar mensaje de error cuando sucede algo mal, no puedo usar exit
#y me parece mas prolijo encerrar todo en un bucle while y usar la sentecia break para evitar tener muchos if y else anidados

while true 
do

	#permisos del archivo de configuracion
	if ! fijar_permisos r "$1"
	then
		break
	fi


	#me fijo si el ambiente ya fue inicalizado, para eso, uso la variable SETEPLAM como flag
	if [ "$SETEPLAM" == SET ]
	then
		mensaje="Ambiente ya inicializado, para reinicializar termine la sesión e ingrese nuevamente"
		printf "%s\n" "$mensaje">&2
		logep -e "initep" "$mensaje"
		break
	fi

	export SETEPLAM=SET


	#Verifico permisos de escritura,lectura y ejecucion cuando corresponda

	#Termina la ejecucion de initep sino puede cambiar el permiso correspondiente
	#Creo una lista para enumerar los archivos ejecutables

	#lista que contiene a los ejecutables, les voy a cambiar los permisos de lecutura y ejecucion
	files_ejecutables="logep instalep demonep"
	#lista que contiene los maestros
	files_maestros="provincias.csv centros.csv trimestres.csv"

	#permisos de ejecutables
	for ejecutable in $files_ejecutables
	do
		if ! fijar_permisos "r x" "$ejecutable"
		then
			break 2
		fi
	done


	#Inicializo variables de directorio
	while read -r linea
	do
		nombreDirectorio=$( echo "$linea" | cut -d= -f1)
		ruta=$( echo "$linea" | cut -d= -f2)
		usuario=$(echo "$linea" | cut -d= -f3)
		case $nombreDirectorio in
			DIRBIN) 
				export DIRBIN=$ruta
				;;
			DIRMAE)
				export DIRMAE=$ruta
				;;
			DIRREC)
				export DIRREC=$ruta
				;;
			DIROK) 
				export DIROK=$ruta 
				;;
			DIRINFO)
				export DIRINFO=$ruta 
				;;
			DIRLOG)
				export DIRLOG=$ruta 
				;;
			GRUPO) 
				export GRUPO=$ruta 
				;;
			DIRPROC)
				export DIRPROC=$ruta 
				;;
		esac
	done <"$1"

	#permisos de archivos maestros (los agrego aca porque necesito la ruta que se carga en DIRMAE)
	for maestro in $files_maestros
	do
		if ! fijar_permisos r "${DIRMAE}/${maestro}"
		then
			break 2
		fi
	done
	#en la variable de ambiente path agrego el directorio de ejecutables
	PATH=$PATH:"$DIRBIN"

	#las variables se han inicalizado y los permisos de los arhcivos han sido fijados
	mensaje="Estado del Sistema: INICIALIZADO"
	printf "%s\n" "$mensaje"
	logep -i "initep" "$mensaje"

	#Pregunto por demonep
	read -p "¿Desea efectuar la activación de Demonep (S/N)?" opcion

	instrucciones_activar_demonio="Para activar el demonio corra comando demonep en background\n. Recibe como entrada los archivo maestros, tablas y el archivo novedades. Estos archivos se pueden encontrar en los directorios mae y rec respectivamente"

	instrucciones_desactivar_demonio="Para desactivar demonio use el comando kill SIGTERM pid, donde pid es identificador del proceso, en caso de fallar use kill SIGKILL pid."

	case "$opcion" in
		s|S ) 
			printf "%s\n" "$instrucciones_desactivar_demonio"
			logep -i "initep" "¿Desea efectuar la activación de Demonep (S/N)? Si"
			./demonep &
			pid=$!			
			printf "%s\n" "Demonep corriendo bajo el numero: $pid" 
			logep -i "initep" "Demonep corriendo bajo el numero: $pid"
			;;

		n|N ) 
			printf "%s\n" "$instrucciones_activar_demonio"
			printf "%s\n" "$instrucciones_desactivar_demonio"
			logep -i "initep" "¿Desea efectuar la activación de Demonep (S/N)? No"
			;;

		* ) 
			printf "Opción inválida\n">&2;&
	esac
	break
done

